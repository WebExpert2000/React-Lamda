{"version":3,"sources":["containers/Home/Home.js","containers/NotFound/NotFound.js","components/LoaderButton.js","containers/Login/Login.js","components/AppliedRoute.js","containers/Signup/Signup.js","containers/NoteList/NoteList.js","config.js","libs/awsLib.js","components/LanguageSwitch.js","containers/NewNote/NewNote.js","containers/Notes/Notes.js","containers/NoteDetail/NoteDetail.js","components/AuthenticatedRoute.js","components/UnauthenticatedRoute.js","Context.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["Home","state","search","searchNotes","allNotes","onChange","e","newNotes","_this","filter","note","sequence","RegExp","target","value","setState","this","props","isAuthenticated","context","getNotes","notes","uniqueSequenceNotes","findIndex","x","push","sequenceList","map","i","react_default","a","createElement","lib","key","to","concat","ListGroupItem","header","trim","split","Date","createdAt","toLocaleString","Fragment","className","PageHeader","loading","FormControl","componentClass","placeholder","ListGroup","renderNotesList","renderNotes","renderLander","Component","NotFound_NotFound","components_LoaderButton","_ref","isLoading","text","loadingText","_ref$className","_ref$disabled","disabled","Object","objectWithoutProperties","Button","assign","Glyphicon","glyph","Login","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","defineProperty","id","handleSubmit","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","preventDefault","Auth","signIn","email","password","userHasAuthenticated","t0","alert","message","stop","_x","apply","arguments","length","onSubmit","FormGroup","controlId","bsSize","ControlLabel","autoFocus","type","block","validateForm","AppliedRoute","C","component","cProps","rest","Route","render","Signup","newUser","signUp","username","sent","handleConfirmationSubmit","_ref2","_callee2","_context2","confirmSignUp","confirmationCode","history","_x2","confirmPassword","HelpBlock","validateConfirmationForm","renderForm","renderConfirmationForm","NoteList","lang1_title","_this2","noteList","match","params","sort","b","noteNumber","_this3","DistanceInWords","now","config","MAX_ATTACHMENT_SIZE","s3","REGION","BUCKET","apiGateway","URL","cognito","USER_POOL_ID","APP_CLIENT_ID","IDENTITY_POOL_ID","s3Upload","_s3Upload","file","user","filename","stored","currentAuthenticatedUser","attributes","sub","name","Storage","put","contentType","abrupt","LanguageSwitch","style","width","onClick","changeLang","lang1","lang2","NewNote","handleFileChange1","file1","files","handleFileChange2","file2","attachment1","attachment2","sequenceTitles","noteToSend","numberOfNotesWithSequence","size","t1","indexOf","st","lang1_content","lang2_content","lang2_title","createNote","t2","console","log","response","openModal","showLanguageModal","lang","textContent","selectedLanguage","slidenum","showFileInput1","showFileInput2","location","API","post","body","index_es","open","onClose","center","display","justifyContent","alignItems","components_LanguageSwitch","rows","bsStyle","Notes","handleFileChange","attachment","saveNote","content","title","handleDelete","window","confirm","isDeleting","deleteNote","attachmentURL","getNote","get","_context3","str","replace","del","Static","rel","href","formatFilename","NoteDetail","maxNumber","findAndGetNote","find","sequenceId","Number","allNoteNumbers","Math","max","noteId","onDeleteNote","prevProps","Alert","variant","pop","dist_default","fileType","filePath","controls","height","src","marginTop","Link","AuthenticatedRoute","Redirect","pathname","UnauthenticatedRoute","redirect","url","undefined","results","exec","decodeURIComponent","querystring","SequencesContext","React","createContext","Routes","childProps","Context","Consumer","Switch","path","exact","objectSpread","NotFound","SequencesProvider","Promise","resolve","reject","then","catch","err","Provider","children","App","authenticated","handleLogout","signOut","isAuthenticating","currentSession","navbarTitle","navLink","urlData","App_SequencesProvider","Navbar","fluid","collapseOnSelect","expand","bg","Header","Brand","Toggle","Collapse","Nav","pullRight","NavItem","react","withRouter","Boolean","hostname","Amplify","configure","mandatorySignIn","region","userPoolId","identityPoolId","userPoolWebClientId","bucket","endpoints","endpoint","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c88490ec.chunk.js","sourcesContent":["import React, { Component } from \"react\"\r\nimport {\r\n  PageHeader,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  FormControl\r\n} from \"react-bootstrap\"\r\nimport { LinkContainer } from \"react-router-bootstrap\"\r\nimport \"./Home.css\"\r\n\r\nexport default class Home extends Component {\r\n  state = {\r\n    search: \"\",\r\n    searchNotes: [],\r\n    allNotes: []\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (!this.props.isAuthenticated) {\r\n      return\r\n    }\r\n\r\n    const notes = await this.props.context.getNotes()\r\n\r\n    this.setState({ allNotes: notes, searchNotes: notes })\r\n  }\r\n\r\n  onChange = e => {\r\n    // eslint-disable-next-line\r\n    const newNotes = this.state.allNotes.filter(note => {\r\n      const result = note.sequence.search(new RegExp(e.target.value, \"i\"))\r\n\r\n      if (result >= 0) {\r\n        return true\r\n      }\r\n    })\r\n\r\n    this.setState({ search: e.target.value, searchNotes: newNotes })\r\n  }\r\n\r\n  renderNotesList(notes) {\r\n    /* Since the API does not have a resource for Sequences and only Notes,\r\n     *  it's neccessary to extract unique sequences from the list of notes like below.\r\n     */\r\n    const uniqueSequenceNotes = []\r\n\r\n    notes.filter(note => {\r\n      let i = uniqueSequenceNotes.findIndex(x => x.sequence === note.sequence)\r\n      if (i <= -1) {\r\n        uniqueSequenceNotes.push(note)\r\n      }\r\n      return null\r\n    })\r\n    const sequenceList = uniqueSequenceNotes.map((note, i) => (\r\n      <LinkContainer key={i} to={`/sequences/${note.sequence}`}>\r\n        <ListGroupItem header={note.sequence.trim().split(\"\\n\")[0]}>\r\n          {\"Created: \" + new Date(note.createdAt).toLocaleString() + \" By\"}\r\n        </ListGroupItem>\r\n      </LinkContainer>\r\n    ))\r\n\r\n    /* Render */\r\n    return (\r\n      <>\r\n        <LinkContainer key=\"new\" to=\"/notes/new\">\r\n          <ListGroupItem>\r\n            <h4>\r\n              <b>{\"\\uFF0B\"}</b> Create a new sequence\r\n            </h4>\r\n          </ListGroupItem>\r\n        </LinkContainer>\r\n        {sequenceList}\r\n      </>\r\n    )\r\n  }\r\n\r\n  renderLander() {\r\n    return (\r\n      <div className=\"lander\">\r\n        <h1>UTell</h1>\r\n        <p>Easy Knowledge Sharing!</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderNotes() {\r\n    return (\r\n      <div className=\"notes\">\r\n        <PageHeader>Your Sequences</PageHeader>\r\n        {this.props.context.loading ? (\r\n          <p>Loading...</p>\r\n        ) : (\r\n          <>\r\n            <FormControl\r\n              onChange={this.onChange}\r\n              value={this.state.search}\r\n              componentClass=\"input\"\r\n              placeholder=\"Search\"\r\n            />\r\n            <hr />\r\n            <ListGroup>\r\n              {this.renderNotesList(this.state.searchNotes)}\r\n            </ListGroup>\r\n          </>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  //Rendering the lander or the list of notes based on this.props.isAuthenticated.\r\n  render() {\r\n    return (\r\n      <div className=\"Home\">\r\n        {this.props.isAuthenticated ? this.renderNotes() : this.renderLander()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from \"react\"\r\n\r\nimport \"./NotFound.css\"\r\n\r\nexport default () => (\r\n  <div className=\"NotFound\">\r\n    <h3>Sorry, page not found!</h3>\r\n  </div>\r\n)\r\n","/*\r\nThis is a really simple component that takes an isLoading flag and the text that the button displays in the two states,(the default state and the loading state).\r\nThe disabled prop is a result of what we have currently in our Login button.\r\nAnd we ensure that the button is disabled when isLoading is true.\r\nThis makes it so that the user can’t click it while we are in the process of logging them in.\r\n*/\r\n\r\nimport React from \"react\";\r\nimport { Button, Glyphicon } from \"react-bootstrap\";\r\nimport \"./LoaderButton.css\";\r\n\r\nexport default ({\r\n  isLoading,\r\n  text,\r\n  loadingText,\r\n  className = \"\",\r\n  disabled = false,\r\n  ...props\r\n}) =>\r\n  <Button\r\n    className={`LoaderButton ${className}`}\r\n    disabled={disabled || isLoading}\r\n    {...props}\r\n  >\r\n    {isLoading && <Glyphicon glyph=\"refresh\" className=\"spinning\" />}\r\n    {!isLoading ? text : loadingText}\r\n  </Button>;\r\n","import React, { Component } from \"react\"\r\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\"\r\nimport { Auth } from \"aws-amplify\"\r\n\r\nimport \"./Login.css\"\r\nimport LoaderButton from \"../../components/LoaderButton\"\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      isLoading: false,\r\n      email: \"\",\r\n      password: \"\"\r\n    }\r\n  }\r\n\r\n  validateForm() {\r\n    return this.state.email.length > 0 && this.state.password.length > 0\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = async event => {\r\n    event.preventDefault()\r\n\r\n    this.setState({ isLoading: true })\r\n\r\n    try {\r\n      await Auth.signIn(this.state.email, this.state.password)\r\n      this.props.userHasAuthenticated(true)\r\n    } catch (e) {\r\n      alert(e.message)\r\n      this.setState({ isLoading: false })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Login\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <FormGroup controlId=\"email\" bsSize=\"large\">\r\n            <ControlLabel>Email</ControlLabel>\r\n            <FormControl\r\n              autoFocus\r\n              type=\"email\"\r\n              value={this.state.email}\r\n              onChange={this.handleChange}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup controlId=\"password\" bsSize=\"large\">\r\n            <ControlLabel>Password</ControlLabel>\r\n            <FormControl\r\n              value={this.state.password}\r\n              onChange={this.handleChange}\r\n              type=\"password\"\r\n            />\r\n          </FormGroup>\r\n          <LoaderButton\r\n            block\r\n            bsSize=\"large\"\r\n            disabled={!this.validateForm()}\r\n            type=\"submit\"\r\n            isLoading={this.state.isLoading}\r\n            text=\"Login\"\r\n            loadingText=\"Logging in…\"\r\n          />\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nexport default ({ component: C, props: cProps, ...rest }) =>\r\n  <Route {...rest} render={props => <C {...props} {...cProps} />} />;\r\n","import React, { Component } from \"react\"\r\nimport { Auth } from \"aws-amplify\"\r\nimport {\r\n  HelpBlock,\r\n  FormGroup,\r\n  FormControl,\r\n  ControlLabel\r\n} from \"react-bootstrap\"\r\n\r\nimport LoaderButton from \"../../components/LoaderButton\"\r\nimport \"./Signup.css\"\r\n\r\nexport default class Signup extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      isLoading: false,\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      confirmationCode: \"\",\r\n      newUser: null\r\n    }\r\n  }\r\n\r\n  validateForm() {\r\n    return (\r\n      this.state.email.length > 0 &&\r\n      this.state.password.length > 0 &&\r\n      this.state.password === this.state.confirmPassword\r\n    )\r\n  }\r\n\r\n  validateConfirmationForm() {\r\n    return this.state.confirmationCode.length > 0\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = async event => {\r\n    event.preventDefault()\r\n\r\n    this.setState({ isLoading: true })\r\n\r\n    try {\r\n      const newUser = await Auth.signUp({\r\n        username: this.state.email,\r\n        password: this.state.password\r\n      })\r\n      this.setState({\r\n        newUser\r\n      })\r\n    } catch (e) {\r\n      alert(e.message)\r\n    }\r\n\r\n    this.setState({ isLoading: false })\r\n  }\r\n\r\n  handleConfirmationSubmit = async event => {\r\n    event.preventDefault()\r\n\r\n    this.setState({ isLoading: true })\r\n\r\n    try {\r\n      await Auth.confirmSignUp(this.state.email, this.state.confirmationCode)\r\n      await Auth.signIn(this.state.email, this.state.password)\r\n\r\n      this.props.userHasAuthenticated(true)\r\n      this.props.history.push(\"/\")\r\n    } catch (e) {\r\n      alert(e.message)\r\n      this.setState({ isLoading: false })\r\n    }\r\n  }\r\n\r\n  renderConfirmationForm() {\r\n    return (\r\n      <form onSubmit={this.handleConfirmationSubmit}>\r\n        <FormGroup controlId=\"confirmationCode\" bsSize=\"large\">\r\n          <ControlLabel>Confirmation Code</ControlLabel>\r\n          <FormControl\r\n            autoFocus\r\n            type=\"tel\"\r\n            value={this.state.confirmationCode}\r\n            onChange={this.handleChange}\r\n          />\r\n          <HelpBlock>Please check your email for the code.</HelpBlock>\r\n        </FormGroup>\r\n        <LoaderButton\r\n          block\r\n          bsSize=\"large\"\r\n          disabled={!this.validateConfirmationForm()}\r\n          type=\"submit\"\r\n          isLoading={this.state.isLoading}\r\n          text=\"Verify\"\r\n          loadingText=\"Verifying…\"\r\n        />\r\n      </form>\r\n    )\r\n  }\r\n\r\n  renderForm() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <FormGroup controlId=\"email\" bsSize=\"large\">\r\n          <ControlLabel>Email</ControlLabel>\r\n          <FormControl\r\n            autoFocus\r\n            type=\"email\"\r\n            value={this.state.email}\r\n            onChange={this.handleChange}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup controlId=\"password\" bsSize=\"large\">\r\n          <ControlLabel>Password</ControlLabel>\r\n          <FormControl\r\n            value={this.state.password}\r\n            onChange={this.handleChange}\r\n            type=\"password\"\r\n          />\r\n          <sub>Passwords require a capital letter, number and symbol</sub>\r\n        </FormGroup>\r\n        <FormGroup controlId=\"confirmPassword\" bsSize=\"large\">\r\n          <ControlLabel>Confirm Password</ControlLabel>\r\n          <FormControl\r\n            value={this.state.confirmPassword}\r\n            onChange={this.handleChange}\r\n            type=\"password\"\r\n          />\r\n        </FormGroup>\r\n        <LoaderButton\r\n          block\r\n          bsSize=\"large\"\r\n          disabled={!this.validateForm()}\r\n          type=\"submit\"\r\n          isLoading={this.state.isLoading}\r\n          text=\"Signup\"\r\n          loadingText=\"Signing up…\"\r\n        />\r\n      </form>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Signup\">\r\n        {this.state.newUser === null\r\n          ? this.renderForm()\r\n          : this.renderConfirmationForm()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\nimport {\n  PageHeader,\n  ListGroup,\n  ListGroupItem,\n  FormControl\n} from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport DistanceInWords from 'date-fns/distance_in_words'\n\nclass NoteList extends Component {\n  state = {\n    notes: [],\n    searchNotes: [],\n    search: ''\n  }\n\n  componentDidMount() {\n    if (this.props.context.notes.length === 0) {\n      this.props.history.push('/')\n      return\n    }\n\n    const noteList = this.props.context.notes.filter(\n      note => note.sequence === this.props.match.params.id\n    )\n\n    noteList.sort((a, b) => {\n      return a.noteNumber > b.noteNumber\n        ? 1\n        : b.noteNumber > a.noteNumber\n        ? -1\n        : 0\n    })\n\n    this.setState({\n      notes: noteList,\n      searchNotes: noteList\n    })\n  }\n\n  onChange = e => {\n    // eslint-disable-next-line\n    const newNotes = this.state.notes.filter(note => {\n      const result = note.lang1_title.search(new RegExp(e.target.value, 'i'))\n\n      if (result >= 0) {\n        return true\n      }\n    })\n\n    this.setState({ search: e.target.value, searchNotes: newNotes })\n  }\n\n  render() {\n    return (\n      <div className=\"notes\">\n        <PageHeader>Slides for {this.props.match.params.id}</PageHeader>\n        <FormControl\n          onChange={this.onChange}\n          value={this.state.search}\n          componentClass=\"input\"\n          placeholder=\"Search\"\n        />\n        <hr />\n        <LinkContainer\n          key=\"new\"\n          to={`/notes/new?sequence=${this.props.match.params.id}`}\n        >\n          <ListGroupItem>\n            <h4>\n              <b>{'\\uFF0B'}</b> Create a new slide\n            </h4>\n          </ListGroupItem>\n        </LinkContainer>\n        <ListGroup>\n          {this.state.searchNotes.map((note, i) => (\n            <LinkContainer\n              key={i}\n              to={`/sequences/${this.props.match.params.id}/${note.noteNumber}`}\n            >\n              <ListGroupItem\n                header={`${note.lang1_title} - #${note.noteNumber}`}\n              >\n                Created {DistanceInWords(Date.now(), note.createdAt)} ago\n              </ListGroupItem>\n            </LinkContainer>\n          ))}\n        </ListGroup>\n      </div>\n    )\n  }\n}\n\nexport default NoteList\n","export default {\n  MAX_ATTACHMENT_SIZE: 50000000,\n  s3: {\n    REGION: \"ap-southeast-2\",\n    BUCKET: \"utell-app-uploads\"\n  },\n  apiGateway: {\n    REGION: \"us-east-2\",\n    URL: \"https://19j0wn30ae.execute-api.us-east-2.amazonaws.com/prod\"\n  },\n  cognito: {\n    REGION: \"us-east-2\",\n    USER_POOL_ID: \"us-east-2_STuTpymta\",\n    APP_CLIENT_ID: \"4djq72sr1h9fn2bdmkbnd7u0bv\",\n    IDENTITY_POOL_ID: \"us-east-2:f07240e2-5c9e-47c0-af6d-40674e40a637\"\n  }\n}\n","import { Storage, Auth } from \"aws-amplify\"\r\n\r\nexport async function s3Upload(file) {\r\n  const user = await Auth.currentAuthenticatedUser()\r\n\r\n  const filename = `${user.attributes.sub}:${Date.now()}-${file.name}`\r\n\r\n  const stored = await Storage.put(filename, file, {\r\n    contentType: file.type\r\n  })\r\n\r\n  return stored.key\r\n}\r\n","import React from \"react\"\n\nconst LanguageSwitch = props => {\n  return (\n    <div style={{ width: \"250px\" }}>\n      <label className=\"switch-light switch-candy\" onClick={props.changeLang}>\n        <input type=\"checkbox\" />\n        <span>\n          <span>{props.lang1}</span>\n          <span>{props.lang2}</span>\n          {/* eslint-disable-next-line */}\n          <a />\n        </span>\n      </label>\n    </div>\n  )\n}\n\nexport default LanguageSwitch\n","import React, { Component } from 'react'\r\nimport { FormGroup, FormControl, ControlLabel, Button } from 'react-bootstrap'\r\nimport { API } from 'aws-amplify'\r\nimport Modal from 'react-responsive-modal'\r\n\r\nimport config from '../../config'\r\nimport { s3Upload } from '../../libs/awsLib'\r\nimport LoaderButton from '../../components/LoaderButton'\r\nimport LanguageSwitch from '../../components/LanguageSwitch'\r\n\r\nimport './NewNote.css'\r\n\r\nexport default class NewNote extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.file1 = null\r\n    this.file2 = null\r\n\r\n    this.state = {\r\n      isLoading: null,\r\n      sequence: '',\r\n      lang1_title: '',\r\n      lang1_content: '',\r\n      lang2_title: '',\r\n      lang2_content: '',\r\n      slidenum: '',\r\n      lang1: 'English',\r\n      lang2: 'Language2',\r\n      showLanguageModal: false,\r\n      selectedLanguage: 'lang1',\r\n      showFileInput1: false,\r\n      showFileInput2: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.context.getNotes()\r\n\r\n    if (this.props.location.search) {\r\n      this.setState({\r\n        sequence: this.props.location.search.split('=')[1]\r\n      })\r\n    }\r\n  }\r\n\r\n  validateForm() {\r\n    return this.state.lang1_title.length > 0 && this.state.sequence.length > 0\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    })\r\n  }\r\n\r\n  handleFileChange1 = event => {\r\n    this.file1 = event.target.files[0]\r\n  }\r\n\r\n  handleFileChange2 = event => {\r\n    this.file2 = event.target.files[0]\r\n  }\r\n\r\n  handleSubmit = async event => {\r\n    event.preventDefault()\r\n\r\n    if (this.file1 && this.file1.size > config.MAX_ATTACHMENT_SIZE) {\r\n      alert(\r\n        `Please pick a file smaller than ${config.MAX_ATTACHMENT_SIZE /\r\n          1000000} MB for attachment 1.`\r\n      )\r\n      return\r\n    }\r\n\r\n    if (this.file2 && this.file2.size > config.MAX_ATTACHMENT_SIZE) {\r\n      alert(\r\n        `Please pick a file smaller than ${config.MAX_ATTACHMENT_SIZE /\r\n          1000000} MB for attachment 2.`\r\n      )\r\n      return\r\n    }\r\n\r\n    this.setState({ isLoading: true })\r\n\r\n    try {\r\n      const attachment1 = this.file1 ? await s3Upload(this.file1) : null\r\n\r\n      const attachment2 = this.file2 ? await s3Upload(this.file2) : null\r\n\r\n      /* Check to see if new sequence title is an existing sequence */\r\n      const { notes } = this.props.context\r\n\r\n      const sequenceTitles = notes.map(note => note.sequence)\r\n\r\n      let noteToSend\r\n\r\n      if (sequenceTitles.indexOf(this.state.sequence) !== -1) {\r\n        const numberOfNotesWithSequence = sequenceTitles.filter(\r\n          st => st === this.state.sequence\r\n        ).length\r\n\r\n        noteToSend = {\r\n          attachment1,\r\n          attachment2,\r\n          sequence: this.state.sequence,\r\n          lang1_content: this.state.lang1_content,\r\n          lang1_title: this.state.lang1_title,\r\n          lang2_content: this.state.lang2_content,\r\n          lang2_title: this.state.lang2_title,\r\n          lang1: this.state.lang1,\r\n          lang2: this.state.lang2,\r\n          noteNumber: numberOfNotesWithSequence + 1\r\n        }\r\n      } else {\r\n        noteToSend = {\r\n          attachment1,\r\n          attachment2,\r\n          sequence: this.state.sequence,\r\n          lang1_content: this.state.lang1_content,\r\n          lang1_title: this.state.lang1_title,\r\n          lang2_content: this.state.lang2_content,\r\n          lang2_title: this.state.lang2_title,\r\n          lang1: this.state.lang1,\r\n          lang2: this.state.lang2,\r\n          noteNumber: 1\r\n        }\r\n      }\r\n      await this.createNote(noteToSend)\r\n\r\n      await this.props.context.getNotes()\r\n\r\n      this.setState({\r\n        isLoading: false\r\n      })\r\n\r\n      this.props.history.push(\r\n        `/sequences/${this.state.sequence}/${noteToSend.noteNumber}?new=true`\r\n      )\r\n    } catch (e) {\r\n      alert(e)\r\n      console.log(e.response)\r\n      this.setState({ isLoading: false })\r\n    }\r\n  }\r\n\r\n  createNote(note) {\r\n    return API.post('notes', '/notes', {\r\n      body: note\r\n    })\r\n  }\r\n\r\n  openModal = e => {\r\n    e.preventDefault()\r\n    this.setState({ showLanguageModal: true })\r\n  }\r\n\r\n  changeLang = e => {\r\n    const lang = e.target.textContent\r\n    if (lang.length > 0) {\r\n      this.setState({\r\n        selectedLanguage: this.state.lang1 === lang ? 'lang1' : 'lang2'\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          open={this.state.showLanguageModal}\r\n          onClose={() => this.setState({ showLanguageModal: false })}\r\n          center\r\n        >\r\n          <label>Language 1: </label>\r\n          <input\r\n            onChange={this.handleChange}\r\n            name=\"lang1\"\r\n            className=\"form-control\"\r\n            value={this.state.lang1}\r\n          />\r\n          <hr />\r\n          <label>Language 2: </label>\r\n          <input\r\n            onChange={this.handleChange}\r\n            className=\"form-control\"\r\n            name=\"lang2\"\r\n            value={this.state.lang2}\r\n          />\r\n          <br />\r\n\r\n          <button\r\n            onClick={() => this.setState({ showLanguageModal: false })}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            Save\r\n          </button>\r\n          <br />\r\n          <small>Note: re-toggle slider to activate new languages.</small>\r\n        </Modal>\r\n        <div className=\"NewNote\">\r\n          <form onSubmit={this.handleSubmit}>\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center'\r\n              }}\r\n            >\r\n              <div>\r\n                <h3>Sequence Title</h3>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <LanguageSwitch\r\n                  lang1={this.state.lang1}\r\n                  lang2={this.state.lang2}\r\n                  changeLang={this.changeLang}\r\n                />\r\n                <button onClick={this.openModal} className=\"btn\">\r\n                  Edit languages\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <FormGroup>\r\n              <FormControl\r\n                name=\"sequence\"\r\n                onChange={this.handleChange}\r\n                value={this.state.sequence}\r\n                componentClass=\"textarea\"\r\n                placeholder=\"Name of the sequence. This slide will be added to a sequence with this name.\"\r\n              />\r\n            </FormGroup>\r\n            <div>\r\n              <h3>Slide Title</h3>\r\n            </div>\r\n            <FormGroup>\r\n              <FormControl\r\n                name={this.state.selectedLanguage + `_title`}\r\n                onChange={this.handleChange}\r\n                value={\r\n                  this.state[this.state.selectedLanguage + `_title`] === null\r\n                    ? ''\r\n                    : this.state[this.state.selectedLanguage + `_title`]\r\n                }\r\n                componentClass=\"textarea\"\r\n                placeholder=\"Name of the slide.\"\r\n              />\r\n            </FormGroup>\r\n            <div>\r\n              <h3>Slide Content</h3>\r\n            </div>\r\n            <FormGroup>\r\n              <FormControl\r\n                name={this.state.selectedLanguage + `_content`}\r\n                onChange={this.handleChange}\r\n                value={\r\n                  this.state[this.state.selectedLanguage + `_content`] === null\r\n                    ? ''\r\n                    : this.state[this.state.selectedLanguage + `_content`]\r\n                }\r\n                componentClass=\"textarea\"\r\n                rows=\"6\"\r\n                placeholder=\"Content of the slide.\"\r\n              />\r\n            </FormGroup>\r\n\r\n            <hr />\r\n            {this.state.showFileInput1 ? (\r\n              <FormGroup controlId=\"file1\">\r\n                <ControlLabel>Slide Attachment 1</ControlLabel>\r\n                <FormControl onChange={this.handleFileChange1} type=\"file\" />\r\n              </FormGroup>\r\n            ) : (\r\n              <Button\r\n                bsStyle=\"primary\"\r\n                onClick={() => this.setState({ showFileInput1: true })}\r\n              >\r\n                Add attachment 1\r\n              </Button>\r\n            )}\r\n            <br />\r\n            <br />\r\n            {this.state.showFileInput2 ? (\r\n              <FormGroup controlId=\"file2\">\r\n                <ControlLabel>Slide Attachment 2</ControlLabel>\r\n                <FormControl onChange={this.handleFileChange2} type=\"file\" />\r\n              </FormGroup>\r\n            ) : (\r\n              <Button\r\n                bsStyle=\"primary\"\r\n                onClick={() => this.setState({ showFileInput2: true })}\r\n              >\r\n                Add attachment 2\r\n              </Button>\r\n            )}\r\n            <hr />\r\n            <LoaderButton\r\n              block\r\n              bsStyle=\"primary\"\r\n              bsSize=\"large\"\r\n              disabled={!this.validateForm()}\r\n              type=\"submit\"\r\n              isLoading={this.state.isLoading}\r\n              text=\"Create\"\r\n              loadingText=\"Creating…\"\r\n            />\r\n          </form>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { API, Storage } from 'aws-amplify'\r\nimport { FormGroup, FormControl, ControlLabel } from 'react-bootstrap'\r\n\r\nimport LoaderButton from '../../components/LoaderButton'\r\nimport config from '../../config'\r\nimport './Notes.css'\r\nimport { s3Upload } from '../../libs/awsLib'\r\n\r\n/*\r\n1. Load the note on componentDidMount and save it to the state.\r\nWe get the id of our note from the URL using the props automatically passed to us by React-Router in this.props.match.params.id.\r\nThe keyword id is a part of the pattern matching in our route (/notes/:id).\r\n\r\n2. If there is an attachment, we use the key to get a secure link to the file we uploaded to S3. We then store this to the component’s state as attachmentURL.\r\n\r\n3. The reason why we have the note object in the state along with the content and the attachmentURL is because we will be using this later when the user edits the note.\r\n*/\r\nexport default class Notes extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.file = null\r\n\r\n    this.state = {\r\n      isLoading: null,\r\n      isDeleting: null,\r\n      note: null,\r\n      content: '',\r\n      title: '',\r\n      attachmentURL: null,\r\n      sequence: '',\r\n      slidenum: ''\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      let attachmentURL\r\n      const note = await this.getNote()\r\n      const { sequence, slidenum, title, content, attachment } = note\r\n\r\n      if (attachment) {\r\n        attachmentURL = await Storage.get(attachment)\r\n      }\r\n\r\n      this.setState({\r\n        sequence,\r\n        slidenum,\r\n        note,\r\n        title,\r\n        content,\r\n        attachmentURL\r\n      })\r\n    } catch (e) {\r\n      alert(e)\r\n    }\r\n  }\r\n\r\n  getNote() {\r\n    return API.get('notes', `/notes/${this.props.match.params.id}`)\r\n  }\r\n\r\n  validateForm() {\r\n    return this.state.content.length > 0\r\n  }\r\n\r\n  formatFilename(str) {\r\n    return str.replace(/^\\w+-/, '')\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value\r\n    })\r\n  }\r\n\r\n  handleFileChange = event => {\r\n    this.file = event.target.files[0]\r\n  }\r\n\r\n  //We save the note by making a PUT request with the note object to /notes/:id where we get the id from this.props.match.params.id. We use the API.put() method from AWS Amplify.\r\n  saveNote(note) {\r\n    return API.put('notes', `/notes/${this.props.match.params.id}`, {\r\n      body: note\r\n    })\r\n  }\r\n\r\n  handleSubmit = async event => {\r\n    let attachment\r\n\r\n    event.preventDefault()\r\n    //If there is a file to upload we call s3Upload to upload it and save the key we get from S3.\r\n    if (this.file && this.file.size > config.MAX_ATTACHMENT_SIZE) {\r\n      alert(\r\n        `Please pick a file smaller than ${config.MAX_ATTACHMENT_SIZE /\r\n          1000000} MB.`\r\n      )\r\n      return\r\n    }\r\n\r\n    this.setState({ isLoading: true })\r\n\r\n    try {\r\n      if (this.file) {\r\n        attachment = await s3Upload(this.file)\r\n      }\r\n\r\n      await this.saveNote({\r\n        sequence: this.state.sequence,\r\n        slidenum: this.state.slidenum,\r\n        content: this.state.content,\r\n        title: this.state.title,\r\n        attachment: attachment || this.state.note.attachment\r\n      })\r\n      this.props.history.push('/')\r\n    } catch (e) {\r\n      alert(e)\r\n      this.setState({ isLoading: false })\r\n    }\r\n  }\r\n\r\n  //TODO handle deleting of S3 attachments\r\n  deleteNote() {\r\n    return API.del('notes', `/notes/${this.props.match.params.id}`)\r\n  }\r\n\r\n  handleDelete = async event => {\r\n    event.preventDefault()\r\n\r\n    const confirmed = window.confirm(\r\n      'Are you sure you want to delete this slide?'\r\n    )\r\n\r\n    if (!confirmed) {\r\n      return\r\n    }\r\n\r\n    this.setState({ isDeleting: true })\r\n\r\n    try {\r\n      await this.deleteNote()\r\n      this.props.history.push('/')\r\n    } catch (e) {\r\n      alert(e)\r\n      this.setState({ isDeleting: false })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Notes\">\r\n        {this.state.note && (\r\n          <form onSubmit={this.handleSubmit}>\r\n            <FormGroup controlId=\"sequence\">\r\n              <FormControl\r\n                onChange={this.handleChange}\r\n                value={this.state.sequence}\r\n                componentClass=\"textarea\"\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"title\">\r\n              <FormControl\r\n                onChange={this.handleChange}\r\n                value={this.state.title}\r\n                componentClass=\"textarea\"\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"content\">\r\n              <FormControl\r\n                onChange={this.handleChange}\r\n                value={this.state.content}\r\n                componentClass=\"textarea\"\r\n              />\r\n            </FormGroup>\r\n            {this.state.note.attachment && (\r\n              <FormGroup>\r\n                <ControlLabel>Attachment</ControlLabel>\r\n                <FormControl.Static>\r\n                  <a\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    href={this.state.attachmentURL}\r\n                  >\r\n                    {this.formatFilename(this.state.note.attachment)}\r\n                  </a>\r\n                </FormControl.Static>\r\n              </FormGroup>\r\n            )}\r\n            <FormGroup controlId=\"file\">\r\n              {!this.state.note.attachment && (\r\n                <ControlLabel>Attachment</ControlLabel>\r\n              )}\r\n              <FormControl onChange={this.handleFileChange} type=\"file\" />\r\n            </FormGroup>\r\n            <LoaderButton\r\n              block\r\n              bsStyle=\"primary\"\r\n              bsSize=\"large\"\r\n              disabled={!this.validateForm()}\r\n              type=\"submit\"\r\n              isLoading={this.state.isLoading}\r\n              text=\"Save\"\r\n              loadingText=\"Saving…\"\r\n            />\r\n            <LoaderButton\r\n              block\r\n              bsStyle=\"danger\"\r\n              bsSize=\"large\"\r\n              isLoading={this.state.isDeleting}\r\n              onClick={this.handleDelete}\r\n              text=\"Delete\"\r\n              loadingText=\"Deleting…\"\r\n            />\r\n          </form>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport FileViewer from 'react-file-viewer'\nimport { API, Auth } from 'aws-amplify'\nimport {\n  FormGroup,\n  FormControl,\n  ControlLabel,\n  Button,\n  Alert\n} from 'react-bootstrap'\nimport Modal from 'react-responsive-modal'\n\nimport config from '../../config'\nimport { s3Upload } from '../../libs/awsLib'\n\nimport LoaderButton from '../../components/LoaderButton'\nimport LanguageSwitch from '../../components/LanguageSwitch'\n\nclass NoteDetail extends Component {\n  state = {\n    note: {},\n    isLoading: false,\n    sequence: '',\n    lang1_title: '',\n    lang2_title: '',\n    lang1_content: '',\n    lang2_content: '',\n    lang1: '',\n    lang2: '',\n    maxNumber: null,\n    showLanguageModal: false,\n    selectedLanguage: 'lang1',\n    sub: '',\n    showFileInput1: false,\n    showFileInput2: false\n  }\n\n  componentDidMount() {\n    if (this.props.context.notes.length === 0) {\n      this.props.history.push('/')\n      return\n    }\n    this.findAndGetNote()\n\n    Auth.currentAuthenticatedUser(user => {\n      this.setState({ sub: user.attributes.sub })\n    })\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.match.params !== prevProps.match.params) {\n      this.findAndGetNote()\n    }\n  }\n\n  findAndGetNote = () => {\n    const note = this.props.context.notes.find(\n      note =>\n        note.sequence === this.props.match.params.sequenceId &&\n        note.noteNumber === Number(this.props.match.params.noteNumber)\n    )\n\n    if (!note) {\n      this.props.history.push('/')\n      return\n    }\n\n    // Find max note number\n    const notesWithSequence = this.props.context.notes.filter(\n      note => note.sequence === this.props.match.params.sequenceId\n    )\n\n    const allNoteNumbers = notesWithSequence.map(note => note.noteNumber)\n\n    const maxNumber = Math.max.apply(null, allNoteNumbers)\n\n    this.setState({\n      note,\n      sequence: note.sequence,\n      lang1_title: note.lang1_title,\n      lang2_title: note.lang2_title,\n      lang1_content: note.lang1_content,\n      lang2_content: note.lang2_content,\n      lang1: note.lang1,\n      lang2: note.lang2,\n      maxNumber\n    })\n  }\n\n  changeLang = e => {\n    const lang = e.target.textContent\n    if (lang.length > 0) {\n      this.setState({\n        selectedLanguage: this.state.lang1 === lang ? 'lang1' : 'lang2'\n      })\n    }\n  }\n\n  validateForm() {\n    return this.state.lang1_title.length > 0 && this.state.sequence.length > 0\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  handleFileChange1 = event => {\n    this.file1 = event.target.files[0]\n  }\n\n  handleFileChange2 = event => {\n    this.file2 = event.target.files[0]\n  }\n\n  openModal = e => {\n    e.preventDefault()\n    this.setState({ showLanguageModal: true })\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault()\n\n    this.setState({ isLoading: true })\n\n    if (this.file1 && this.file1.size > config.MAX_ATTACHMENT_SIZE) {\n      alert(\n        `Please pick a file smaller than ${config.MAX_ATTACHMENT_SIZE /\n          1000000} MB for attachment.`\n      )\n      return\n    }\n\n    if (this.file2 && this.file2.size > config.MAX_ATTACHMENT_SIZE) {\n      alert(\n        `Please pick a file smaller than ${config.MAX_ATTACHMENT_SIZE /\n          1000000} MB for attachment 2.`\n      )\n      return\n    }\n\n    try {\n      const attachment1 = this.file1\n        ? await s3Upload(this.file1)\n        : this.state.note.attachment1\n        ? this.state.note.attachment1\n        : null\n\n      const attachment2 = this.file2\n        ? await s3Upload(this.file2)\n        : this.state.note.attachment2\n        ? this.state.note.attachment2\n        : null\n\n      await API.del('notes', `/notes/${this.state.note.noteId}`)\n\n      await API.post('notes', '/notes', {\n        body: {\n          attachment1,\n          attachment2,\n          sequence: this.state.sequence,\n          lang1_content: this.state.lang1_content,\n          lang1_title: this.state.lang1_title,\n          lang2_content: this.state.lang2_content,\n          lang2_title: this.state.lang2_title,\n          lang1: this.state.lang1,\n          lang2: this.state.lang2,\n          noteNumber: this.state.note.noteNumber\n        }\n      })\n\n      await this.props.context.getNotes()\n\n      this.setState({\n        isLoading: false\n      })\n    } catch (e) {\n      alert(e)\n      console.log(e.response)\n      this.setState({ isLoading: false })\n    }\n  }\n\n  onDeleteNote = async () => {\n    const confirm = window.confirm('Are you sure you want to delete this note?')\n\n    if (confirm) {\n      try {\n        await API.del('notes', `/notes/${this.state.note.noteId}`)\n        console.log('-> Deleted note.')\n        this.props.history.push('/')\n      } catch (err) {\n        alert(err)\n      }\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Modal\n          open={this.state.showLanguageModal}\n          onClose={() => this.setState({ showLanguageModal: false })}\n          center\n        >\n          <label>Language 1: </label>\n          <input\n            onChange={this.handleChange}\n            name=\"lang1\"\n            className=\"form-control\"\n            value={this.state.lang1}\n          />\n          <hr />\n          <label>Language 2: </label>\n          <input\n            onChange={this.handleChange}\n            className=\"form-control\"\n            name=\"lang2\"\n            value={this.state.lang2}\n          />\n          <br />\n\n          <button\n            onClick={() => this.setState({ showLanguageModal: false })}\n            className=\"btn btn-primary\"\n          >\n            Save\n          </button>\n          <br />\n          <small>Note: re-toggle slider to activate new languages.</small>\n        </Modal>\n        <div>\n          {this.props.location.search === '?new=true' && (\n            <Alert variant=\"primary\">Note has been created!</Alert>\n          )}\n\n          <form onSubmit={this.handleSubmit}>\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              }}\n            >\n              <div>\n                <h3>Sequence Title</h3>\n              </div>\n              <div className=\"text-center\">\n                <LanguageSwitch\n                  lang1={this.state.lang1}\n                  lang2={this.state.lang2}\n                  changeLang={this.changeLang}\n                />\n                <button onClick={this.openModal} className=\"btn\">\n                  Change languages\n                </button>\n              </div>\n            </div>\n\n            <FormGroup>\n              <FormControl\n                onChange={this.handleChange}\n                value={this.state.sequence}\n                name=\"sequence\"\n                componentClass=\"textarea\"\n                placeholder=\"Name of the sequence. This slide will be added to a sequence with this name.\"\n              />\n            </FormGroup>\n            <div>\n              <h3>Slide Title</h3>\n            </div>\n            <FormGroup>\n              <FormControl\n                name={this.state.selectedLanguage + `_title`}\n                onChange={this.handleChange}\n                value={\n                  this.state[this.state.selectedLanguage + `_title`] === null\n                    ? ''\n                    : this.state[this.state.selectedLanguage + `_title`]\n                }\n                componentClass=\"textarea\"\n                placeholder=\"Name of the slide.\"\n              />\n            </FormGroup>\n            <div>\n              <h3>Slide Content</h3>\n            </div>\n            <FormGroup>\n              <FormControl\n                name={this.state.selectedLanguage + `_content`}\n                onChange={this.handleChange}\n                value={\n                  this.state[this.state.selectedLanguage + `_content`] === null\n                    ? ''\n                    : this.state[this.state.selectedLanguage + `_content`]\n                }\n                componentClass=\"textarea\"\n                rows=\"6\"\n                placeholder=\"Content of the slide.\"\n              />\n            </FormGroup>\n            {this.state.showFileInput1 ? (\n              <FormGroup controlId=\"file1\">\n                <ControlLabel>Slide Attachment 1</ControlLabel>\n                <FormControl onChange={this.handleFileChange1} type=\"file\" />\n              </FormGroup>\n            ) : (\n              <Button\n                bsStyle=\"primary\"\n                onClick={() => this.setState({ showFileInput1: true })}\n              >\n                Add attachment 1\n              </Button>\n            )}\n            <br />\n            <br />\n\n            {this.state.showFileInput2 ? (\n              <FormGroup controlId=\"file2\">\n                <ControlLabel>Slide Attachment 2</ControlLabel>\n                <FormControl onChange={this.handleFileChange2} type=\"file\" />\n              </FormGroup>\n            ) : (\n              <Button\n                bsStyle=\"primary\"\n                onClick={() => this.setState({ showFileInput2: true })}\n              >\n                Add attachment 2\n              </Button>\n            )}\n            <hr />\n            {this.state.note.attachment1 &&\n            (this.state.note.attachment1.split('.').pop() === 'mov' ||\n              this.state.note.attachment1.split('.').pop() === 'MOV') ? (\n              <div className=\"mov-container text-center\">\n                <video\n                  controls=\"controls\"\n                  width=\"600\"\n                  height=\"400\"\n                  src={`https://utell-app-uploads.s3-ap-southeast-2.amazonaws.com/public/${\n                    this.state.note.attachment1\n                  }`}\n                />\n              </div>\n            ) : (\n              this.state.note.attachment1 && (\n                <div>\n                  <FileViewer\n                    fileType={\n                      this.state.note.attachment1 &&\n                      this.state.note.attachment1.split('.').pop()\n                    }\n                    filePath={\n                      this.state.note.attachment1 &&\n                      `https://utell-app-uploads.s3-ap-southeast-2.amazonaws.com/public/${\n                        this.state.note.attachment1\n                      }`\n                    }\n                  />\n                </div>\n              )\n            )}\n            <br />\n            <br />\n            <br />\n            {this.state.note.attachment2 &&\n            (this.state.note.attachment2.split('.').pop() === 'mov' ||\n              this.state.note.attachment2.split('.').pop() === 'MOV') ? (\n              <div className=\"mov-container text-center\">\n                <video\n                  controls=\"controls\"\n                  width=\"600\"\n                  height=\"400\"\n                  src={`https://utell-app-uploads.s3-ap-southeast-2.amazonaws.com/public/${\n                    this.state.note.attachment2\n                  }`}\n                />\n              </div>\n            ) : (\n              this.state.note.attachment2 && (\n                <div>\n                  <FileViewer\n                    fileType={\n                      this.state.note.attachment2 &&\n                      this.state.note.attachment2.split('.').pop()\n                    }\n                    filePath={\n                      this.state.note.attachment2 &&\n                      `https://utell-app-uploads.s3-ap-southeast-2.amazonaws.com/public/${\n                        this.state.note.attachment2\n                      }`\n                    }\n                  />\n                </div>\n              )\n            )}\n            <hr />\n            <LoaderButton\n              block\n              bsStyle=\"primary\"\n              bsSize=\"large\"\n              disabled={!this.validateForm()}\n              type=\"submit\"\n              isLoading={this.state.isLoading}\n              text=\"Update Slide\"\n              loadingText=\"Updating...\"\n            />\n          </form>\n          <LoaderButton\n            block\n            bsStyle=\"danger\"\n            bsSize=\"large\"\n            isLoading={this.state.isLoading}\n            text=\"Delete Slide\"\n            loadingText=\"Deleting...\"\n            style={{ marginTop: '5px' }}\n            onClick={this.onDeleteNote}\n          />\n          <div>\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                marginTop: '5px'\n              }}\n            >\n              {this.state.note.noteNumber > 1 ? (\n                <Link\n                  to={`/sequences/${this.state.note.sequence}/${this.state.note\n                    .noteNumber - 1}`}\n                >\n                  <Button bsStyle=\"success\" bsSize=\"lg\">\n                    Previous\n                  </Button>\n                </Link>\n              ) : (\n                <Button bsStyle=\"success\" bsSize=\"lg\" disabled>\n                  Previous\n                </Button>\n              )}\n\n              <p>Slide #{this.state.note.noteNumber}</p>\n              {this.state.note.noteNumber !== this.state.maxNumber ? (\n                <Link\n                  to={`/sequences/${this.state.note.sequence}/${this.state.note\n                    .noteNumber + 1}`}\n                >\n                  <Button bsStyle=\"success\" bsSize=\"lg\">\n                    Next\n                  </Button>\n                </Link>\n              ) : (\n                <Link to={`/notes/new?sequence=${this.state.note.sequence}`}>\n                  <Button bsStyle=\"success\" bsSize=\"lg\">\n                    + Create a new slide\n                  </Button>\n                </Link>\n              )}\n            </div>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default NoteDetail\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport default ({ component: C, props: cProps, ...rest }) =>\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      cProps.isAuthenticated\r\n        ? <C {...props} {...cProps} />\r\n        : <Redirect\r\n            to={`/login?redirect=${props.location.pathname}${props.location\r\n              .search}`}\r\n          />}\r\n  />;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nfunction querystring(name, url = window.location.href) {\r\n    name = name.replace(/[[]]/g, \"\\\\$&\");\r\n  \r\n    const regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\", \"i\");\r\n    const results = regex.exec(url);\r\n  \r\n    if (!results) {\r\n      return null;\r\n    }\r\n    if (!results[2]) {\r\n      return \"\";\r\n    }\r\n  \r\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n  }\r\n  \r\n\r\n  export default ({ component: C, props: cProps, ...rest }) => {\r\n    const redirect = querystring(\"redirect\");\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={props =>\r\n          !cProps.isAuthenticated\r\n            ? <C {...props} {...cProps} />\r\n            : <Redirect\r\n                to={redirect === \"\" || redirect === null ? \"/\" : redirect}\r\n              />}\r\n      />\r\n    );\r\n  };\r\n  \r\n","import React from \"react\"\n\nconst SequencesContext = React.createContext()\n\nexport default SequencesContext\n","import React from \"react\"\r\nimport { Route, Switch } from \"react-router-dom\"\r\nimport Home from \"./containers/Home/Home\"\r\nimport NotFound from \"./containers/NotFound/NotFound\"\r\nimport Login from \"./containers/Login/Login\"\r\nimport AppliedRoute from \"./components/AppliedRoute\"\r\nimport Signup from \"./containers/Signup/Signup\"\r\nimport NoteList from \"./containers/NoteList/NoteList\"\r\nimport NewNote from \"./containers/NewNote/NewNote\"\r\nimport Notes from \"./containers/Notes/Notes\"\r\nimport NoteDetail from \"./containers/NoteDetail/NoteDetail\"\r\nimport AuthenticatedRoute from \"./components/AuthenticatedRoute\"\r\nimport UnauthenticatedRoute from \"./components/UnauthenticatedRoute\"\r\n\r\nimport SequencesContext from \"./Context\"\r\n\r\nexport default ({ childProps }) => (\r\n  <SequencesContext.Consumer>\r\n    {context => (\r\n      <Switch>\r\n        <AppliedRoute\r\n          path=\"/\"\r\n          exact\r\n          component={Home}\r\n          props={{ context, ...childProps }}\r\n        />\r\n        <UnauthenticatedRoute\r\n          path=\"/login\"\r\n          exact\r\n          component={Login}\r\n          props={childProps}\r\n        />\r\n        <UnauthenticatedRoute\r\n          path=\"/signup\"\r\n          exact\r\n          component={Signup}\r\n          props={childProps}\r\n        />\r\n        <AuthenticatedRoute\r\n          path=\"/sequences/:id\"\r\n          exact\r\n          component={NoteList}\r\n          props={{ context, ...childProps }}\r\n        />\r\n        <AuthenticatedRoute\r\n          path=\"/sequences/:sequenceId/:noteNumber\"\r\n          exact\r\n          component={NoteDetail}\r\n          props={{ context, ...childProps }}\r\n        />\r\n        <AuthenticatedRoute\r\n          path=\"/notes/new\"\r\n          exact\r\n          component={NewNote}\r\n          props={{ context, ...childProps }}\r\n        />\r\n        <AuthenticatedRoute\r\n          path=\"/notes/:id\"\r\n          exact\r\n          component={Notes}\r\n          props={childProps}\r\n        />\r\n        {/* Finally, catch all unmatched routes */}\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n    )}\r\n  </SequencesContext.Consumer>\r\n)\r\n","import React, { Component, Fragment } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { Nav, Navbar, NavItem } from 'react-bootstrap'\nimport Routes from './Routes'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Auth, API } from 'aws-amplify'\nimport './App.css'\n\nimport SequencesContext from './Context'\n\nclass SequencesProvider extends Component {\n  state = {\n    notes: [],\n    loading: false\n  }\n\n  getNotes = async () => {\n    return new Promise((resolve, reject) => {\n      console.log('-> Getting all notes...')\n\n      this.setState({ loading: true })\n\n      API.get('notes', '/notes')\n        .then(notes => {\n          this.setState({ notes, loading: false }, () => resolve(notes))\n        })\n        .catch(err => {\n          alert(err)\n          this.setState({ loading: false }, () => reject(err))\n        })\n    })\n  }\n\n  render() {\n    return (\n      <SequencesContext.Provider\n        value={{\n          notes: this.state.notes,\n          loading: this.state.loading,\n          getNotes: this.getNotes\n        }}\n      >\n        {this.props.children}\n      </SequencesContext.Provider>\n    )\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isAuthenticated: false,\n      isAuthenticating: true\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      await Auth.currentSession()\n      this.userHasAuthenticated(true)\n    } catch (e) {\n      if (e !== 'No current user') {\n        alert(e)\n      }\n    }\n\n    this.setState({ isAuthenticating: false })\n  }\n\n  userHasAuthenticated = authenticated => {\n    this.setState({ isAuthenticated: authenticated })\n  }\n\n  // Redirects us back to the login page once the user logs out.\n  handleLogout = async event => {\n    await Auth.signOut()\n    this.userHasAuthenticated(false)\n    this.props.history.push('/login')\n  }\n\n  render() {\n    const urlData = this.props.history.location.pathname.split('/')\n\n    let navbarTitle\n    let navLink\n\n    if (urlData.length - 1 === 3) {\n      navbarTitle = urlData[2]\n      navLink = `/sequences/${urlData[2]}`\n    } else {\n      navbarTitle = 'Your Sequences'\n      navLink = '/'\n    }\n\n    const childProps = {\n      isAuthenticated: this.state.isAuthenticated,\n      userHasAuthenticated: this.userHasAuthenticated\n    }\n\n    return (\n      !this.state.isAuthenticating && (\n        <SequencesProvider>\n          <div className=\"App container\">\n            <Navbar fluid collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n              <Navbar.Header>\n                <Navbar.Brand>\n                  <Link to=\"/\">Utell</Link>\n                </Navbar.Brand>\n                <Navbar.Toggle />\n              </Navbar.Header>\n              <Navbar.Collapse>\n                <Nav className=\"mr-auto\">\n                  <Navbar.Brand>\n                    <Link to={navLink}>{navbarTitle}</Link>\n                  </Navbar.Brand>\n                </Nav>\n                <Nav pullRight>\n                  {this.state.isAuthenticated ? (\n                    <NavItem onClick={this.handleLogout}>Logout</NavItem>\n                  ) : (\n                    <Fragment>\n                      <LinkContainer to=\"/signup\">\n                        <NavItem>Signup</NavItem>\n                      </LinkContainer>\n                      <LinkContainer to=\"/login\">\n                        <NavItem>Login</NavItem>\n                      </LinkContainer>\n                    </Fragment>\n                  )}\n                </Nav>\n              </Navbar.Collapse>\n            </Navbar>\n\n            <Routes childProps={childProps} />\n          </div>\n        </SequencesProvider>\n      )\n    )\n  }\n}\n\nexport default withRouter(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport Amplify from \"aws-amplify\"\nimport config from \"./config\"\n\nAmplify.configure({\n  Auth: {\n    mandatorySignIn: true,\n    region: config.cognito.REGION,\n    userPoolId: config.cognito.USER_POOL_ID,\n    identityPoolId: config.cognito.IDENTITY_POOL_ID,\n    userPoolWebClientId: config.cognito.APP_CLIENT_ID\n  },\n  Storage: {\n    region: config.s3.REGION,\n    bucket: config.s3.BUCKET,\n    identityPoolId: config.cognito.IDENTITY_POOL_ID\n  },\n  API: {\n    endpoints: [\n      {\n        name: \"notes\",\n        endpoint: config.apiGateway.URL,\n        region: config.apiGateway.REGION\n      }\n    ]\n  }\n})\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}